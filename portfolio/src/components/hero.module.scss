.wrapper {
    min-height: 100vh; // TODO: CHECK THIS WOULD BE NICE TO HAVE A SET HEIGHT
    width: 100%;
    display: flex;
    flex-direction: column-reverse;
    // justify-content: center;
    // align-items: center;
    color: whitesmoke;
    font-size: clamp(0.75em, 1.5vw, 1.6rem);
    // color: black;

    // padding: 10vh 10vw;
    // padding-top: 3rem;

    // background
    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        background: url("/assets/images/11226740766_890db563a5_o.jpg");
        background-repeat: no-repeat;
        object-fit: cover;
        filter: grayscale(1) blur(0px) brightness(0.5) contrast(2);
        // filter: grayscale(1) blur(0px) brightness(0.5) contrast(2) invert(1); // light
        background-color: black;
        background-blend-mode: screen;
        z-index: -1;
    }

    & > div {
        display: flex;
        justify-content: center;
        align-items: center;
        // height: 100%;
        text-shadow: 0 0 10px rgba(1, 1, 1, 0.5);
    }

    @include breakpoint("md") {
        flex-direction: row;
    }

    // font-family: "Courier New", Courier, monospace;
    .left {
        flex: 2 0 66%;
        // TODO change layout? needs to have more than 50%
        // before mobile md breakpoint
        & > div {
            width: 100%;
            margin: 0 0 0 10vw;
        }
        @include themed() {
            h3::selection {
                background-color: t("text1");
                color: t("surface1");
            }
            p {
                color: t("text3");
                font-size: max(1em, 1rem);

                &::selection {
                    background-color: t("text3");
                    color: t("surface1");
                }
            }
        }
    }
    .right {
        position: relative;
        flex: 1 1 33%;

        // &::before,
        // &::after {
        //     content: "";
        //     position: absolute;
        //     top: 0;
        //     left: 0;
        //     height: 100%;
        //     width: 100%;
        // }

        &::after {
            background: linear-gradient(
                to right,
                rgba(0, 0, 0, 0) 0%,
                rgba(0, 0, 0, 1) 100%
            );
            border: 1px solid;
            border-top-left-radius: 3rem;
            border-bottom-left-radius: 3rem;
            // clip-path: polygon(0 100%, 100% 100%, 100% 0, 0 calc(100% - 3rem));
        }
    }
}

.callToActionButtons {
    display: flex;
    gap: 1.5rem;
}

.brandColor {
    @include themed() {
        color: t("brand");
        &::selection {
            background-color: t("brand");
            color: t("surface1");
        }
    }
}

.title {
    position: relative;
    display: flex;
    flex-direction: row;
    line-height: 1;
    // font-size: 1.5rem;
    // font-weight: 700;
    align-items: center;
    // gap: 1ch;

    // font-size: 3rem;
    // height: 1em;
    height: 1em;
}

.LevenshteinChangingTitle {
    position: relative;
    display: flex;
    height: 1em;
    flex: 1 1 auto;
    // flex-direction: row;
    // line-height: 1;
    // // font-size: 1.5rem;
    // // font-weight: 700;
    // align-items: center;
    // // gap: 1ch;

    // // font-size: 3rem;
    // // height: 1em;
    // height: 1em;
}

.letterBase {
    position: absolute;
    top: 0;
    width: 1ch;
    height: 100%;
    animation-delay: 1s;

    & span:first-child,
    & span:last-child {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
    }

    & span:first-child {
        // border-bottom: 1px solid blue;
    }

    &:not(.insertion) span:last-child {
        top: 100%;
    }

    // border: 1px solid green;
}

@for $i from 0 through 20 {
    .letterNumber#{$i} {
        left: #{$i}ch;
    }
    .letterNumber#{-1 * $i} {
        left: #{-1 * $i}ch;
    }
}

$animation-duration: 2.5s;

@for $i from 0 through 20 {
    //forwards delta {letter(s) before current are inserted}
    @keyframes delta#{$i} {
        0% {
            transform: translateX(0);
        }
        100% {
            transform: translateX(#{$i}ch);
        }
    }
    .letterDelta#{$i} {
        border-bottom: 1px solid lightblue;
        animation: delta#{$i} $animation-duration linear forwards;
    }

    @keyframes delta#{-1 * $i} {
        0% {
            transform: translateX(0);
        }
        100% {
            transform: translateX(#{-1 * $i}ch);
        }
    }

    .letterDelta#{-1 * $i} {
        border-bottom: 1px solid blue;
        animation: delta#{-1 * $i} $animation-duration linear forwards;
    }
}

// @for $i from 0 through -20 {
//     //backwards delta {letter(s) before current are deleted}
//     @keyframes delta#{$i} {
//         0% {
//             transform: translateX(#{-1 * $i}ch);
//         }
//         100% {
//             transform: translateX(0);
//         }
//     }
//     .letterDelta#{$i} {
//         // border: 1px solid blue;
//         animation: delta#{$i} 0.5s linear forwards;
//     }
// }

// @keyframes substitutionOld {
//     from {
//         clip-path: inset(0 0 0 0);
//     }
//     to {
//         clip-path: inset(0 0 100% 0);
//     }
// }
// @keyframes substitutionNew {
//     from {
//         top: 100%;
//         opacity: 0;
//         clip-path: inset(0 0 100% 0);
//         // border-top: 3px solid red;
//     }
//     80% {
//         // border-top: 3px solid red;
//     }
//     to {
//         top: 0;
//         opacity: 1;
//         clip-path: inset(0 0 0 0);
//         // border-top: 0px solid red;
//     }
// }

// @keyframes deletion {
//     to {
//         opacity: 0;
//         width: 0;
//     }
// }

.insertion {
    @extend .letterBase;
    // $insertShowPercent: %;
    @keyframes insertion {
        0% {
            opacity: 0;
            // clip-path: inset(0 100% 0 0);
        }
        100% {
            opacity: 1;
            // clip-path: inset(0 0 0 0);
        }
    }

    & span:last-child::after {
        @keyframes insertionAfter {
            0% {
                clip-path: inset(0 100% 0 0);
            }
            33% {
                clip-path: inset(0 0 0 0);
            }
            100% {
                clip-path: inset(0 0 0 100%);
            }
        }
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 1ch;
        height: 1em;
        background-color: green;
        animation: insertionAfter $animation-duration linear forwards;
    }

    // animation-duration: 0s;

    & span:last-child {
        opacity: 0;
        // clip-path: inset(0 100% 0 0);
        // border-top: 1px solid green;
        animation: insertion $animation-duration linear forwards;
    }
}

.match {
    @extend .letterBase;

    // & span:first-child {
    //     clip-path: inset(0 0 0 0);
    //     animation: substitutionOld 0 linear;
    //     animation-fill-mode: forwards;
    // }
    // & span:last-child {
    //     top: 100%;
    //     opacity: 0;
    //     clip-path: inset(0 0 100% 0);
    //     // border-top: 3px solid red;
    //     animation: substitutionNew 0 linear;
    //     animation-fill-mode: forwards;
    // }
}

.substitution {
    @extend .letterBase;

    // & span:first-child {
    //     clip-path: inset(0 0 0 0);
    //     animation: substitutionOld $animation-duration linear;
    //     animation-fill-mode: forwards;
    // }
    // & span:last-child {
    //     top: 100%;
    //     opacity: 0;
    //     clip-path: inset(0 0 100% 0);
    //     // border-top: 3px solid red;
    //     animation: substitutionNew $animation-duration linear;
    //     animation-fill-mode: forwards;
    // }
}

.deletion {
    @extend .letterBase;

    // border-right: 3px solid red;
    // animation: deletion $animation-duration linear;
    // animation-fill-mode: forwards;
    // animation-delay: 0.5s;
    // overflow: hidden;

    // swipe WIP
    // position: relative;

    // &::after {
    //     content: "";
    //     position: absolute;
    //     top: 0;
    //     left: 0;
    //     height: 100%;
    //     width: 3px;
    //     background-color: red;
    // }
}

// @for $i from 1 through 20 {
//     :is(.substitution):nth-child(#{$i}) {
//         & span:first-child,
//         & span:last-child {
//             // delay the first span by 0.5s
//             animation-delay: #{0.5 + $i / 10}s;
//         }
//     }
// }

// @for $i from 1 through 20 {
//     :is(.deletion, .insertion):nth-child(#{$i}) {
//         animation-duration: $animation-duration / 2;
//         animation-delay: #{$i / 10}s;
//     }
// }

// test class for badly tagged letters
.HUHHH {
    color: orange !important;
    border: 1px solid orange !important;
}
