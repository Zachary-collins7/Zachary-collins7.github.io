@import '../../../styles/colors.scss';

.wrapper {
    display: flex;
    height: calc(100vh - 3rem);
    justify-content: center;
    align-items: center;
    padding: 1rem;
}

.form-box {
    position: relative;
    font-size: 1.1rem;
    background: change-color($color: $surface2, $alpha: 0.95);
    padding: 1.5rem;
    max-width: 600px;

    &,
    &::before {
        border-radius: 1rem;
    }

    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: -1;
        box-shadow: 0px 2.8px 2.2px rgba(0, 0, 0, 0.029),
            0px 6.7px 5.3px rgba(0, 0, 0, 0.04), 0px 12.5px 10px rgba(0, 0, 0, 0.048),
            0px 22.3px 17.9px rgba(0, 0, 0, 0.056),
            0px 41.8px 33.4px rgba(0, 0, 0, 0.066), 0px 100px 80px rgba(0, 0, 0, 0.09);
    }

    @supports (backdrop-filter: blur()) or (-webkit-backdrop-filter: blur()) {
        & {
            background: change-color($color: $surface2, $alpha: 0.75);
            backdrop-filter: blur(2rem);
            box-shadow: inset 0 0 2rem $surface2;
        }
    }
    
    /* Form elements */
    h2 {
        position: relative;
        text-transform: capitalize;
        text-align: center;
        font-size: 2em;
        color: $text1;
        background: transparent;
        margin: 0 0 1em 0;
        font-weight: 500;
    }

    .input-box {
        position: relative;
        margin-bottom: 1.5em;
        padding-top: 0.25em;

        & :is(label, input) {
                padding: 0.5em 0;
                font-size: 1em;
            }
        label {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            color: $text2;
            text-transform: capitalize;
            pointer-events: none;
            transition: all 0.3s;

            &::after {
                content: attr(data-error-msg);
                position: absolute;
                right: 0;
                color: var(--error);
                opacity: 0;
                transform: translateY(0.5em);
                transition: all 0.3s;
            }
        }

        input {
            margin: 0;
            outline: none;
            border: none;
            border-top: 1px solid transparent;
            border-bottom: 1px solid $text2;
            color: $text1;
            background: transparent;
            width: 100%;

            &::placeholder {
                opacity: 0;
            }

            &:valid {
                border-bottom-color: $brand;
            }

            &:not(:focus):not(:placeholder-shown):invalid~label::after {
                opacity: 1;
                transform: none;
            }

            &:is(:focus, :not(:placeholder-shown))~label {
                color: $brand;
                font-size: 0.8em;
                top: -1em;
            }
        }
    }

    button {
        font-size: 1em;
        color: $text1;
        width: 100%;
        padding: 0.75em 0;
        margin: 2em 0 0;
        outline: none;
        border-radius: 0.5em;
        background: transparent;
        border: 1px solid $surface1;
        transition: scale 0.3s, background 0.3s;
    }

    form:valid {
        button {
            border: 1px solid $brand;
            &:hover {
                    background: $brand;
                    scale: 1.025;
                }
        }
    }

    @media screen and (min-width: 600px) {
        .input-group {
            display: flex;
            gap: 1em
        }
    }
}