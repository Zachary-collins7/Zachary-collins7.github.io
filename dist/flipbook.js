class FlipBook{constructor(t){this.el=t,this.frames=this.el.getAttribute("data-frames"),this.url=this.el.getAttribute("data-url"),this.filetype=this.el.getAttribute("data-file-type")||"png",this.el.style.height=100+1*this.frames+"vh",this.canvas=document.createElement("canvas"),this.canvas.style.position="sticky",this.canvas.style.width="100%",this.canvas.style.height="100vh",this.canvas.style.top=0,this.canvas.style.left=0,this.canvas.style.backgroundColor="black",this.el.appendChild(this.canvas),this.context=this.canvas.getContext("2d"),this.img=new Image,this.img.src=this.currentFrame(1),this.img.onload=function(){this.canvas.width=this.img.width,this.canvas.height=this.img.height,this.context.drawImage(this.img,0,0,this.img.width,this.img.height,0,0,this.canvas.width,this.canvas.height)}.bind(this),window.addEventListener("scroll",(()=>{const i=-(this.el.getBoundingClientRect().top+t.ownerDocument.defaultView.pageYOffset-window.scrollY)/this.el.getBoundingClientRect().height,s=Math.max(Math.min(this.frames-1,Math.ceil(i*this.frames)),1);requestAnimationFrame((()=>this.updateImage(s+1)))})),this.preloadImages()}currentFrame(t){return`${this.url}${t.toString().padStart(4,"0")}.${this.filetype}`}updateImage(t){this.img.src=this.currentFrame(t),this.context.drawImage(this.img,0,0,this.img.width,this.img.height,0,0,this.canvas.width,this.canvas.height)}async preloadImages(){for(let t=1;t<this.frames;t++)(new Image).src=this.currentFrame(t)}}export{FlipBook};